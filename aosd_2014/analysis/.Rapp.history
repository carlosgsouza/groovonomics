2+2
package.install("psych")
install.packages("psych")
clear
5Ë†5
5^5
v=c(1, 2, 34, 5,  "a")
v
d=data.frame(id=1:5, gender=c(2, 2, 3, 41, 0))
d
view(d)
View(d)
edit(d)
d
View(d)
edit(d)
getwd()
install.packages(sm)
install.packages("sm")
search()
install.packages("sm")
search()
defaults write org.R-project.R force.LANG en_US.UTF-8
getwd()
data<-read.table("minutes.txt")
describe(data)
library(psych)#
library(sm)#
library(ggplot2)#
library(MASS)
describe(data)
qplot(data, binwidth=5)
qplot(data[,1], binwidth=5)
data<-read.table("minutes.txt")
qplot(data[,1], binwidth=5)
data<-read.table("minutes.txt")
qplot(data[,1], binwidth=5)
data<-read.table("minutes.txt")
qplot(data[,1], binwidth=5)
library(psych)#
library(sm)#
library(ggplot2)#
library(MASS)#
library(grid)#
library(xtable)#
#
setwd("~/workspace_gg/groovonomics/aosd_2014/analysis")#
#
data_all<-read.table("parsed/declaration_by_type.txt", header=T)#
data_all<-data_all[data_all$loc>0 & !is.na(data_all$all), ]#
describe(data_all)#
#
languages<-read.table("parsed/languages.txt")#
languages$V2 <- factor(languages$V1, as.character(languages$V1))#
#
declaration_metadata<-read.table("parsed/declaration_metadata.txt", header=T)#
declaration_metadata<-declaration_metadata[declaration_metadata$loc>0 & !is.na(data_all$all), ]#
describe(declaration_metadata)#
#
data_tests_all<-read.table("parsed/declaration_by_tests.txt", header=T)#
data_tests_all<-data_tests_all[data_tests_all$loc>0, ]#
describe(data_tests_all)#
#
data_scripts_all<-read.table("parsed/declaration_by_scripts.txt", header=T)#
data_scripts_all<-data_scripts_all[data_scripts_all$loc>0, ]#
describe(data_scripts_all)#
#
data_background_all<-read.table("parsed/declaration_by_background.txt", header=T)#
data_background_all<-data_background_all[data_background_all$loc>0, ]#
describe(data_background_all)#
#
testData=data_tests_all[data_tests_all$condition=="test", ]#
mainData=data_tests_all[data_tests_all$condition=="not-test", ]#
#
scriptData=data_scripts_all[data_scripts_all$condition=="script", ]#
classData=data_scripts_all[data_scripts_all$condition=="not-script", ]#
#
staticBackgroundData=data_background_all[data_background_all$condition=="static-only", ]#
dynamicBackgroundData=data_background_all[data_background_all$condition=="dynamic-only", ]#
staticAndDynamicBackgroundData=data_background_all[data_background_all$condition=="static-and-dynamic", ]#
#
data_size=data_all#
data_size$condition=NA#
data_size[data_size$loc<=2000 | data_size$commits<=100 | data_size$age<=100, ]$condition="1-small"#
data_size[data_size$loc>2000 & data_size$commits>100 & data_size$age>100, ]$condition="2-big"#
smallData=data_size[data_size$condition=="1-small", ]#
bigData=data_size[data_size$condition=="2-big", ]#
#
change_commit_spearman = read.table("parsed/change_commit_spearman.txt")#
#
i<-data.frame(	#
				projectId=1,#
				loc=2,#
				commits=3,#
				age=4,#
#
				all=5, #
#
				localVariable=6,#
				methodReturn=7,#
				methodParameter=8,#
				constructorParameter=9,#
				field=10,#
				privateMethodReturn=11,#
				protectedMethodReturn=12,#
				publicMethodReturn=13,#
				privateMethodParameter=14,#
				protectedMethodParameter=15,#
				publicMethodParameter=16,#
				privateConstructorParameter=17,#
				protectedConstructorParameter=18,#
				publicConstructorParameter=19,#
				privateField=20,#
				protectedField=21,#
				publicField=22,#
				private=23,#
				protected=24,#
				public=25#
			)#
label<-c(#
		"project id",#
		"LOC",#
		"number of commits",#
		"age",#
		"all",#
#
		"Local\nVariable",#
		"Method\nReturn",#
		"Method\nParameter",#
		"Constructor\nParameter",#
		"Field",#
#
		"Private",#
		"Protected",#
		"Public",#
#
		"Private",#
		"Protected",#
		"Public",#
#
		"Private",#
		"Protected",#
		"Public",#
#
		"Private",#
		"Protected",#
		"Public",#
#
		"Private",#
		"Protected",#
		"Public"#
)
lv <- data_background_all[!is.na(data_background_all[,6]), 6]#
	mr <- data_background_all[!is.na(data_background_all[,7]), 7]#
	mp <- data_background_all[!is.na(data_background_all[,8]), 8]#
	cp <- data_background_all[!is.na(data_background_all[,9]), 9]#
	fd <- data_background_all[!is.na(data_background_all[,10]),10]
lv_condition <- factor(data_background_all[!is.na(data_background_all[,6]), 26], levels=c("static", "dynamic", "static-and-dynamic"), labels=c("static", "dynamic", "static-and-dynamic"))
summary(lv_condition)
factorialAnovaBackground<-function() {#
	lv <- data_background_all[!is.na(data_background_all[,6]), 6]#
	mr <- data_background_all[!is.na(data_background_all[,7]), 7]#
	mp <- data_background_all[!is.na(data_background_all[,8]), 8]#
	cp <- data_background_all[!is.na(data_background_all[,9]), 9]#
	fd <- data_background_all[!is.na(data_background_all[,10]),10]#
	lv_condition <- factor(data_background_all[!is.na(data_background_all[,6]), 26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
	mr_condition <- factor(data_background_all[!is.na(data_background_all[,7]), 26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
	mp_condition <- factor(data_background_all[!is.na(data_background_all[,8]), 26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
	cp_condition <- factor(data_background_all[!is.na(data_background_all[,9]), 26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
	fd_condition <- factor(data_background_all[!is.na(data_background_all[,10]),26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
#
	d <- data.frame(#
			U=c(lv, mr, mp, cp, fd),#
			C=factor(c(lv_condition, mr_condition, mp_condition, cp_condition, fd_condition), levels=1:3, labels=c("static-only", "dynamic-only", "static-and-dynamic")),#
			T=factor(rep(c("LV", "MR", "MP", "CP", "Fd"), times=c( length(lv), length(mr), length(mp), length(cp), length(fd) ) ))#
		)#
	factorialAnova(d, "background")#
}#
factorialAnovaBackground()
factorialAnova<-function(d, folder) {#
	aov.model <- aov(U~C*T, data=d)	#
	sink(file=paste("result/", folder, "/comparison/anova/summary.txt", sep=""))#
	print(summary(aov.model))#
	aov.table = summary(aov.model)#
	ss = aov.table[[1]]$"Sum Sq"#
	eta.sq = ss[1] / (ss[1] + ss[2])#
	sink(file=paste("result/", folder, "/comparison/anova/eta_sq.txt", sep=""))#
	print(eta.sq)#
	sink(file=paste("result/", folder, "/comparison/anova/tukey_hsd.txt", sep=""))#
	print(TukeyHSD(aov.model, conf.level=0.99))#
	sink(type="output")#
}
factorialAnovaBackground<-function() {#
	lv <- data_background_all[!is.na(data_background_all[,6]), 6]#
	mr <- data_background_all[!is.na(data_background_all[,7]), 7]#
	mp <- data_background_all[!is.na(data_background_all[,8]), 8]#
	cp <- data_background_all[!is.na(data_background_all[,9]), 9]#
	fd <- data_background_all[!is.na(data_background_all[,10]),10]#
	lv_condition <- factor(data_background_all[!is.na(data_background_all[,6]), 26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
	mr_condition <- factor(data_background_all[!is.na(data_background_all[,7]), 26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
	mp_condition <- factor(data_background_all[!is.na(data_background_all[,8]), 26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
	cp_condition <- factor(data_background_all[!is.na(data_background_all[,9]), 26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
	fd_condition <- factor(data_background_all[!is.na(data_background_all[,10]),26], levels=c("static-only", "dynamic-only", "static-and-dynamic"), labels=c("static-only", "dynamic-only", "static-and-dynamic"))#
#
	d <- data.frame(#
			U=c(lv, mr, mp, cp, fd),#
			C=factor(c(lv_condition, mr_condition, mp_condition, cp_condition, fd_condition), levels=1:3, labels=c("static-only", "dynamic-only", "static-and-dynamic")),#
			T=factor(rep(c("LV", "MR", "MP", "CP", "Fd"), times=c( length(lv), length(mr), length(mp), length(cp), length(fd) ) ))#
		)#
	factorialAnova(d, "background")#
}#
factorialAnovaBackground()
factorialAnovaSize<-function() {#
	lv <- data_size[!is.na(data_size[,6]), 6]#
	mr <- data_size[!is.na(data_size[,7]), 7]#
	mp <- data_size[!is.na(data_size[,8]), 8]#
	cp <- data_size[!is.na(data_size[,9]), 9]#
	fd <- data_size[!is.na(data_size[,10]),10]#
	lv_condition <- factor(data_size[!is.na(data_size[,6]), 26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
	mr_condition <- factor(data_size[!is.na(data_size[,7]), 26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
	mp_condition <- factor(data_size[!is.na(data_size[,8]), 26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
	cp_condition <- factor(data_size[!is.na(data_size[,9]), 26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
	fd_condition <- factor(data_size[!is.na(data_size[,10]),26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
#
	d <- data.frame(#
			U=c(lv, mr, mp, cp, fd),#
			C=factor(c(lv_condition, mr_condition, mp_condition, cp_condition, fd_condition), levels=1:2, labels=c("1-small","2-big")),#
			T=factor(rep(c("LV", "MR", "MP", "CP", "Fd"), times=c( length(lv), length(mr), length(mp), length(cp), length(fd) ) ))#
		)#
	factorialAnova(d, "size")#
}#
#
factorialAnovaSize()
factorialAnovaSize<-function() {#
	lv <- data_size[!is.na(data_size[,6]), 6]#
	mr <- data_size[!is.na(data_size[,7]), 7]#
	mp <- data_size[!is.na(data_size[,8]), 8]#
	cp <- data_size[!is.na(data_size[,9]), 9]#
	fd <- data_size[!is.na(data_size[,10]),10]#
	lv_condition <- factor(data_size[!is.na(data_size[,6]), 26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
	mr_condition <- factor(data_size[!is.na(data_size[,7]), 26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
	mp_condition <- factor(data_size[!is.na(data_size[,8]), 26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
	cp_condition <- factor(data_size[!is.na(data_size[,9]), 26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
	fd_condition <- factor(data_size[!is.na(data_size[,10]),26], levels=c("1-small", "2-big"), labels=c("1-small", "2-big"))#
#
	d <- data.frame(#
			U=c(lv, mr, mp, cp, fd),#
			C=factor(c(lv_condition, mr_condition, mp_condition, cp_condition, fd_condition), levels=1:2, labels=c("1-small","2-big")),#
			T=factor(rep(c("LV", "MR", "MP", "CP", "Fd"), times=c( length(lv), length(mr), length(mp), length(cp), length(fd) ) ))#
		)#
	factorialAnova(d, "size")#
}#
#
factorialAnovaSize()
install.packages("heplots")
install.packages("heplots")
library(car)
install.packages("car")
install.packages("BaylorEdPsych")
